---
# - name: Include domain configuration file
#   include_vars:
#     file: ./domain.yml
#     name: domain
#   tags: common
- name: Configure domain controller
  hosts: domain_controller
  gather_facts: no
  vars:
    domain_name: ncisg.lab
    domain_admin: domadmin
    domain_admin_password: "Ncisglab123."
    safe_mode_password: "Thisisthe000safepassword!!!"

  tasks: 
  #Set DNS to localhost and google
  - name: Set DNS Address
    win_dns_client:
      adapter_names: '*'
      ipv4_addresses:
        - 127.0.0.1
        - 8.8.8.8
      log_path: C:\dns_log.txt
  # - name: Read credentials from domain configuration file
  #   set_fact:
  #     ansible_user: "{{ domain_admin }}"
  #     ansible_password: "{{ domain_admin_password }}"
  #   when: "packer is not defined"
  #   tags: common
  - name: Ensure necessary Microsoft features are installed
    win_feature:
      name: "{{ item }}"
      state: present
    with_items:
    # Available features can be listed using Get-WindowsFeature
    - AD-Domain-Services
    - RSAT-AD-AdminCenter
    - RSAT-ADDS-Tools
    tags: base
  - name: Ensure domain is created
    win_domain:
      dns_domain_name: "{{ domain_name }}"
      safe_mode_password: "{{ safe_mode_password }}"
    register: domain_creation
    tags: base

  - name: Reboot if domain was just created
    win_reboot:
      pre_reboot_delay: 15
      reboot_timeout: 600
      post_reboot_delay: 60
    when: domain_creation.reboot_required
    tags: base

  - name: Ensure xActiveDirectory PS DSC module is installed
    win_psmodule:
      name: xActiveDirectory
      state: present
    tags: base

  - name: Ensure domain is available
    win_dsc:
      resource_name: xWaitForADDomain
      DomainName: "{{ domain_name }}"
      RetryCount: 100
      RetryIntervalSec: 10

  - name: Add domain admin
    win_domain_user:
      name: "{{ domain_admin }}"
      firstname: Juan
      surname: Pincho
      password: "{{ domain_admin_password }}"
      state: present
      groups:
        - Domain Admins



  # - name: Ensure domain controllers are promoted
  #   win_domain_controller:
  #     dns_domain_name: "{{ domain_name }}"
  #     domain_admin_user: "{{ domain_admin }}@{{ domain_name }}"
  #     domain_admin_password: "{{ domain_admin_password }}"
  #     safe_mode_password: "{{ safe_mode_password }}"
  #     state: domain_controller
  #     log_path: C:\Windows\Temp\promotion.txt
  #   register: dc_promotion
  #   tags: base

  # - name: Reboot if server was just promoted to a domain controller
  #   win_reboot: {}
  #   when: dc_promotion.reboot_required
  #   tags: base



  # - name: Set a weak password policy
  #   win_command: powershell.exe -
  #   args:
  #     stdin: "Set-ADDefaultDomainPasswordPolicy -MinPasswordLength 1 -ComplexityEnabled $False -Identity {{ domain.dns_name }}"

  # - name: Set domain root path (e.g. DC=xtof,DC=lab)
  #   set_fact:
  #     # e.g. DC=ncisg,DC=lab
  #     domain_root_path: DC={{ domain_name.split('.') | join(',DC=') }}

  # - name: Ensure domain groups exist
  #   win_domain_group:
  #     name: "{{ item.dn.split(',')[0].split('=')[1] }}"
  #     path: "{{ item.dn.split(',') | reject('search', item.dn.split(',')[0]) | map('regex_replace', '(.+)', '\\1,') | join('') }}{{ domain_root_path }}"
  #     scope: global
  #     state: present
  #   with_items: "{{ domain.groups }}"

  # - name: Ensure domain users exist
  #   win_domain_user:
  #     name: "{{ item.username }}"
  #     password: "{{ item.password | default(item.username) }}"
  #     path: "{{ item.OU | default('CN=Users') }},{{ domain_root_path }}"
  #     enabled: yes
  #   with_items: "{{ domain.users }}"
